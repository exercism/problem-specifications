{
  "exercise": "triangle",
  "version": "1.3.0",
  "comments": [
    " Pursuant to discussion in #202, we have decided NOT to test triangles ",
    " where all side lengths are positive but a + b = c. e.g:               ",
    " (2, 4, 2, Isosceles), (1, 3, 4, Scalene).                             ",
    " It's true that the triangle inequality admits such triangles.These    ",
    " triangles have zero area, however.                                    ",
    " They're degenerate triangles with all three vertices collinear.       ",
    " (In contrast, we will test (0, 0, 0, Illegal), as it is a point)      ",
    " The tests assert properties of the triangle are true or false.        ",
    " See: https://github.com/exercism/problem-specifications/issues/379 for disscussion  ",
    " of this approach                                                      ",
    " How you handle invalid triangles is up to you. These tests explicitly ",
    " mark triangles with invalid side lengths with an error object. Your   ",
    " track should decide whether that means such inputs result in an error ",
    " or not (instead considering such inputs valid, with an expected result",
    " of `false`). Choose what is idiomatic for your language.              "
  ],
  "cases": [
    {
      "description": "equilateral triangle",
      "cases": [
        {
          "description": "all sides are equal",
          "property": "equilateral",
          "input": {
            "sides": [2, 2, 2]
          },
          "expected": true
        },
        {
          "description": "any side is unequal",
          "property": "equilateral",
          "input": {
            "sides": [2, 3, 2]
          },
          "expected": false
        },
        {
          "description": "no sides are equal",
          "property": "equilateral",
          "input": {
            "sides": [5, 4, 6]
          },
          "expected": false
        },
        {
          "description": "all zero sides is not a triangle",
          "property": "equilateral",
          "input": {
            "sides": [0, 0, 0]
          },
          "expected": {"error": "side lengths must be > 0"}
        },
        {
          "comments": [
            " Your track may choose to skip this test    ",
            " and deal only with integers if appropriate "
          ],
          "description": "sides may be floats",
          "property": "equilateral",
          "input": {
            "sides": [0.5, 0.5, 0.5]
          },
          "expected": true
        }
      ]
    },
    {
      "description": "isosceles triangle",
      "cases": [
        {
          "description": "last two sides are equal",
          "property": "isosceles",
          "input": {
            "sides": [3, 4, 4]
          },
          "expected": true
        },
        {
          "description": "first two sides are equal",
          "property": "isosceles",
          "input": {
            "sides": [4, 4, 3]
          },
          "expected": true
        },
        {
          "description": "first and last sides are equal",
          "property": "isosceles",
          "input": {
            "sides": [4, 3, 4]
          },
          "expected": true
        },
        {
          "description": "equilateral triangles are also isosceles",
          "property": "isosceles",
          "input": {
            "sides": [4, 4, 4]
          },
          "expected": true
        },
        {
          "description": "no sides are equal",
          "property": "isosceles",
          "input": {
            "sides": [2, 3, 4]
          },
          "expected": false
        },
        {
          "description": "first triangle inequality violation",
          "property": "isosceles",
          "input": {
            "sides": [1, 1, 3]
          },
          "expected": {"error": "triangle inequality violated"}
        },
        {
          "description": "second triangle inequality violation",
          "property": "isosceles",
          "input": {
            "sides": [1, 3, 1]
          },
          "expected": {"error": "triangle inequality violated"}
        },
        {
          "description": "third triangle inequality violation",
          "property": "isosceles",
          "input": {
            "sides": [3, 1, 1]
          },
          "expected": {"error": "triangle inequality violated"}
        },
        {
          "comments": [
            " Your track may choose to skip this test    ",
            " and deal only with integers if appropriate "
          ],
          "property": "isosceles",
          "description": "sides may be floats",
          "input": {
            "sides": [0.5, 0.4, 0.5]
          },
          "expected": true
        }
      ]
    },
    {
      "description": "scalene triangle",
      "cases": [
        {
          "description": "no sides are equal",
          "property": "scalene",
          "input": {
            "sides": [5, 4, 6]
          },
          "expected": true
        },
        {
          "description": "all sides are equal",
          "property": "scalene",
          "input": {
            "sides": [4, 4, 4]
          },
          "expected": false
        },
        {
          "description": "two sides are equal",
          "property": "scalene",
          "input": {
            "sides": [4, 4, 3]
          },
          "expected": false
        },
        {
          "description": "may not violate triangle inequality",
          "property": "scalene",
          "input": {
            "sides": [7, 3, 2]
          },
          "expected": {"error": "triangle inequality violated"}
        },
        {
          "comments": [
            " Your track may choose to skip this test    ",
            " and deal only with integers if appropriate "
          ],
          "description": "sides may be floats",
          "property": "scalene",
          "input": {
            "sides": [0.5, 0.4, 0.6]
          },
          "expected": true
        }
      ]
    }
  ]
}
